// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "\"MyTravelBook is an application aim to provide a simple way to create and store your vacation stories.\" \n",
    "title": "MyTravelBook",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/auth/callback": {
      "get": {
        "security": [],
        "tags": [
          "authentication"
        ],
        "summary": "return access_token",
        "responses": {
          "200": {
            "description": "login",
            "schema": {
              "properties": {
                "access_token": {
                  "type": "string",
                  "format": "string"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Check if MyTravelBook is healthy",
        "tags": [
          "health"
        ],
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "status of health check",
            "schema": {
              "$ref": "#/definitions/health"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "security": [],
        "tags": [
          "login"
        ],
        "summary": "login through oauth2 server",
        "responses": {
          "200": {
            "description": "login",
            "schema": {
              "properties": {
                "access_token": {
                  "type": "string",
                  "format": "string"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/travel/{travelId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "travel"
        ],
        "summary": "Find travel by ID",
        "operationId": "getTravelById",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "id travel to be retrieve",
            "name": "travelId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/travel"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "travel"
        ],
        "summary": "Update an existing travel by ID",
        "operationId": "updateTravelById",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "id's travel that need to be updated",
            "name": "travelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated user object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateTravelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return the updateted travel",
            "schema": {
              "$ref": "#/definitions/travel"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "travel"
        ],
        "summary": "Delete an existing travel using his Id",
        "operationId": "deleteTravelById",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "numeric ID of the flag",
            "name": "travelId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Travel successfuly deleted"
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/travels": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "travel"
        ],
        "summary": "Returns an array of travels object.",
        "operationId": "getTravels",
        "responses": {
          "200": {
            "description": "list all the travels",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/travel"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "travel"
        ],
        "summary": "Add a new travel to the shelf",
        "operationId": "addTravel",
        "parameters": [
          {
            "description": "Create a travel object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createTravelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns the created travel",
            "schema": {
              "$ref": "#/definitions/travel"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "createTravelRequest": {
      "type": "object",
      "required": [
        "name",
        "country",
        "description"
      ],
      "properties": {
        "country": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "health": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "string"
    },
    "travel": {
      "type": "object",
      "required": [
        "name",
        "country",
        "description"
      ],
      "properties": {
        "country": {
          "type": "string",
          "minLength": 1
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "name": {
          "description": "Name of your trip",
          "type": "string",
          "minLength": 1
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "updateTravelRequest": {
      "type": "object",
      "required": [
        "name",
        "country",
        "description"
      ],
      "properties": {
        "country": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    }
  },
  "securityDefinitions": {
    "OauthSecurity": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth",
      "tokenUrl": "https://www.googleapis.com/oauth2/v4/token",
      "scopes": {
        "admin": "Admin scope",
        "user": "User scope"
      }
    }
  },
  "security": [
    {
      "OauthSecurity": [
        "user"
      ]
    }
  ],
  "tags": [
    {
      "description": "Everything about travel",
      "name": "travel"
    },
    {
      "description": "Health status of MyTravelBook",
      "name": "health"
    },
    {
      "description": "Login through oauth2 server",
      "name": "login"
    },
    {
      "description": "Management access token",
      "name": "authentication"
    }
  ],
  "x-tagGroups": [
    {
      "name": "MyTravelBook management"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "\"MyTravelBook is an application aim to provide a simple way to create and store your vacation stories.\" \n",
    "title": "MyTravelBook",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/auth/callback": {
      "get": {
        "security": [],
        "tags": [
          "authentication"
        ],
        "summary": "return access_token",
        "responses": {
          "200": {
            "description": "login",
            "schema": {
              "properties": {
                "access_token": {
                  "type": "string",
                  "format": "string"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Check if MyTravelBook is healthy",
        "tags": [
          "health"
        ],
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "status of health check",
            "schema": {
              "$ref": "#/definitions/health"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "security": [],
        "tags": [
          "login"
        ],
        "summary": "login through oauth2 server",
        "responses": {
          "200": {
            "description": "login",
            "schema": {
              "properties": {
                "access_token": {
                  "type": "string",
                  "format": "string"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/travel/{travelId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "travel"
        ],
        "summary": "Find travel by ID",
        "operationId": "getTravelById",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "id travel to be retrieve",
            "name": "travelId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/travel"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "travel"
        ],
        "summary": "Update an existing travel by ID",
        "operationId": "updateTravelById",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "id's travel that need to be updated",
            "name": "travelId",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated user object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateTravelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return the updateted travel",
            "schema": {
              "$ref": "#/definitions/travel"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "travel"
        ],
        "summary": "Delete an existing travel using his Id",
        "operationId": "deleteTravelById",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "numeric ID of the flag",
            "name": "travelId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Travel successfuly deleted"
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/travels": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "travel"
        ],
        "summary": "Returns an array of travels object.",
        "operationId": "getTravels",
        "responses": {
          "200": {
            "description": "list all the travels",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/travel"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "travel"
        ],
        "summary": "Add a new travel to the shelf",
        "operationId": "addTravel",
        "parameters": [
          {
            "description": "Create a travel object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createTravelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns the created travel",
            "schema": {
              "$ref": "#/definitions/travel"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "createTravelRequest": {
      "type": "object",
      "required": [
        "name",
        "country",
        "description"
      ],
      "properties": {
        "country": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "health": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "string"
    },
    "travel": {
      "type": "object",
      "required": [
        "name",
        "country",
        "description"
      ],
      "properties": {
        "country": {
          "type": "string",
          "minLength": 1
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "name": {
          "description": "Name of your trip",
          "type": "string",
          "minLength": 1
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "updateTravelRequest": {
      "type": "object",
      "required": [
        "name",
        "country",
        "description"
      ],
      "properties": {
        "country": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    }
  },
  "securityDefinitions": {
    "OauthSecurity": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth",
      "tokenUrl": "https://www.googleapis.com/oauth2/v4/token",
      "scopes": {
        "admin": "Admin scope",
        "user": "User scope"
      }
    }
  },
  "security": [
    {
      "OauthSecurity": [
        "user"
      ]
    }
  ],
  "tags": [
    {
      "description": "Everything about travel",
      "name": "travel"
    },
    {
      "description": "Health status of MyTravelBook",
      "name": "health"
    },
    {
      "description": "Login through oauth2 server",
      "name": "login"
    },
    {
      "description": "Management access token",
      "name": "authentication"
    }
  ],
  "x-tagGroups": [
    {
      "name": "MyTravelBook management"
    }
  ]
}`))
}
