// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "MyTravelNotebook is an application aim to provide a simple way to create a booktrip.\n",
    "title": "MyTravelNotebook",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/travel/{travel_id}": {
      "get": {
        "tags": [
          "travel"
        ],
        "operationId": "getTravelById",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "travel unique id",
            "name": "travel_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the travel informations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/travel"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/travels": {
      "get": {
        "tags": [
          "travel"
        ],
        "operationId": "listTravels",
        "responses": {
          "200": {
            "description": "list all the travels",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/travels"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "travel": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "unique name of the travel",
          "type": "string",
          "minLength": 1
        },
        "resume": {
          "description": "short resume of the travel",
          "type": "string",
          "minLength": 1
        },
        "travel_id": {
          "description": "unique id of the travel",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "travels": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "unique name of the travel",
          "type": "string",
          "minLength": 1
        }
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "MyTravelNotebook management",
      "tags": [
        "travel"
      ]
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "MyTravelNotebook is an application aim to provide a simple way to create a booktrip.\n",
    "title": "MyTravelNotebook",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/travel/{travel_id}": {
      "get": {
        "tags": [
          "travel"
        ],
        "operationId": "getTravelById",
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "travel unique id",
            "name": "travel_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the travel informations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/travel"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/travels": {
      "get": {
        "tags": [
          "travel"
        ],
        "operationId": "listTravels",
        "responses": {
          "200": {
            "description": "list all the travels",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/travels"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "travel": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "unique name of the travel",
          "type": "string",
          "minLength": 1
        },
        "resume": {
          "description": "short resume of the travel",
          "type": "string",
          "minLength": 1
        },
        "travel_id": {
          "description": "unique id of the travel",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "travels": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "unique name of the travel",
          "type": "string",
          "minLength": 1
        }
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "MyTravelNotebook management",
      "tags": [
        "travel"
      ]
    }
  ]
}`))
}
