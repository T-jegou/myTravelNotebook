// Code generated by go-swagger; DO NOT EDIT.

package travel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/T-jegou/myTravelNotebook/swagger_gen/models"
)

// AddTravelOKCode is the HTTP code returned for type AddTravelOK
const AddTravelOKCode int = 200

/*AddTravelOK returns the created travel

swagger:response addTravelOK
*/
type AddTravelOK struct {

	/*
	  In: Body
	*/
	Payload *models.Travel `json:"body,omitempty"`
}

// NewAddTravelOK creates AddTravelOK with default headers values
func NewAddTravelOK() *AddTravelOK {

	return &AddTravelOK{}
}

// WithPayload adds the payload to the add travel o k response
func (o *AddTravelOK) WithPayload(payload *models.Travel) *AddTravelOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add travel o k response
func (o *AddTravelOK) SetPayload(payload *models.Travel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTravelOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddTravelDefault generic error response

swagger:response addTravelDefault
*/
type AddTravelDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTravelDefault creates AddTravelDefault with default headers values
func NewAddTravelDefault(code int) *AddTravelDefault {
	if code <= 0 {
		code = 500
	}

	return &AddTravelDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add travel default response
func (o *AddTravelDefault) WithStatusCode(code int) *AddTravelDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add travel default response
func (o *AddTravelDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add travel default response
func (o *AddTravelDefault) WithPayload(payload *models.Error) *AddTravelDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add travel default response
func (o *AddTravelDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTravelDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
