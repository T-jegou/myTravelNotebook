// Code generated by go-swagger; DO NOT EDIT.

package travel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"swagger_gen/swagger_gen/models"
)

// GetTravelByIDOKCode is the HTTP code returned for type GetTravelByIDOK
const GetTravelByIDOKCode int = 200

/*GetTravelByIDOK returns the travel informations

swagger:response getTravelByIdOK
*/
type GetTravelByIDOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Travel `json:"body,omitempty"`
}

// NewGetTravelByIDOK creates GetTravelByIDOK with default headers values
func NewGetTravelByIDOK() *GetTravelByIDOK {

	return &GetTravelByIDOK{}
}

// WithPayload adds the payload to the get travel by Id o k response
func (o *GetTravelByIDOK) WithPayload(payload []*models.Travel) *GetTravelByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get travel by Id o k response
func (o *GetTravelByIDOK) SetPayload(payload []*models.Travel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTravelByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Travel, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetTravelByIDDefault generic error response

swagger:response getTravelByIdDefault
*/
type GetTravelByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTravelByIDDefault creates GetTravelByIDDefault with default headers values
func NewGetTravelByIDDefault(code int) *GetTravelByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTravelByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get travel by Id default response
func (o *GetTravelByIDDefault) WithStatusCode(code int) *GetTravelByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get travel by Id default response
func (o *GetTravelByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get travel by Id default response
func (o *GetTravelByIDDefault) WithPayload(payload *models.Error) *GetTravelByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get travel by Id default response
func (o *GetTravelByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTravelByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
